//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IMS.wrCustomers {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsCustomersSoap", Namespace="http://tempuri.org/")]
    public partial class wsCustomers : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomersFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMaxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Customer_AccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDefaultCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTransOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerBalanceByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerBalanceByDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountStatementOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsCustomers() {
            this.Url = global::IMS.Properties.Settings.Default.IMS_wrCustomers_wsCustomers;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCustomersCompletedEventHandler getCustomersCompleted;
        
        /// <remarks/>
        public event getCustomersFullCompletedEventHandler getCustomersFullCompleted;
        
        /// <remarks/>
        public event getMaxIDCompletedEventHandler getMaxIDCompleted;
        
        /// <remarks/>
        public event getCustomerCompletedEventHandler getCustomerCompleted;
        
        /// <remarks/>
        public event addCustomerCompletedEventHandler addCustomerCompleted;
        
        /// <remarks/>
        public event updateCustomerCompletedEventHandler updateCustomerCompleted;
        
        /// <remarks/>
        public event deleteCustomerCompletedEventHandler deleteCustomerCompleted;
        
        /// <remarks/>
        public event Customer_AccountCompletedEventHandler Customer_AccountCompleted;
        
        /// <remarks/>
        public event CreateDefaultCustomerCompletedEventHandler CreateDefaultCustomerCompleted;
        
        /// <remarks/>
        public event addTransCompletedEventHandler addTransCompleted;
        
        /// <remarks/>
        public event getCustomerBalanceByIDCompletedEventHandler getCustomerBalanceByIDCompleted;
        
        /// <remarks/>
        public event getCustomerBalanceByDatesCompletedEventHandler getCustomerBalanceByDatesCompleted;
        
        /// <remarks/>
        public event getTransactionDetailsCompletedEventHandler getTransactionDetailsCompleted;
        
        /// <remarks/>
        public event AccountStatementCompletedEventHandler AccountStatementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getCustomers() {
            object[] results = this.Invoke("getCustomers", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomersAsync() {
            this.getCustomersAsync(null);
        }
        
        /// <remarks/>
        public void getCustomersAsync(object userState) {
            if ((this.getCustomersOperationCompleted == null)) {
                this.getCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomersOperationCompleted);
            }
            this.InvokeAsync("getCustomers", new object[0], this.getCustomersOperationCompleted, userState);
        }
        
        private void OngetCustomersOperationCompleted(object arg) {
            if ((this.getCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomersCompleted(this, new getCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomersFull", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getCustomersFull() {
            object[] results = this.Invoke("getCustomersFull", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomersFullAsync() {
            this.getCustomersFullAsync(null);
        }
        
        /// <remarks/>
        public void getCustomersFullAsync(object userState) {
            if ((this.getCustomersFullOperationCompleted == null)) {
                this.getCustomersFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomersFullOperationCompleted);
            }
            this.InvokeAsync("getCustomersFull", new object[0], this.getCustomersFullOperationCompleted, userState);
        }
        
        private void OngetCustomersFullOperationCompleted(object arg) {
            if ((this.getCustomersFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomersFullCompleted(this, new getCustomersFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMaxID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getMaxID() {
            object[] results = this.Invoke("getMaxID", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getMaxIDAsync() {
            this.getMaxIDAsync(null);
        }
        
        /// <remarks/>
        public void getMaxIDAsync(object userState) {
            if ((this.getMaxIDOperationCompleted == null)) {
                this.getMaxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMaxIDOperationCompleted);
            }
            this.InvokeAsync("getMaxID", new object[0], this.getMaxIDOperationCompleted, userState);
        }
        
        private void OngetMaxIDOperationCompleted(object arg) {
            if ((this.getMaxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMaxIDCompleted(this, new getMaxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer getCustomer(int ID) {
            object[] results = this.Invoke("getCustomer", new object[] {
                        ID});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAsync(int ID) {
            this.getCustomerAsync(ID, null);
        }
        
        /// <remarks/>
        public void getCustomerAsync(int ID, object userState) {
            if ((this.getCustomerOperationCompleted == null)) {
                this.getCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerOperationCompleted);
            }
            this.InvokeAsync("getCustomer", new object[] {
                        ID}, this.getCustomerOperationCompleted, userState);
        }
        
        private void OngetCustomerOperationCompleted(object arg) {
            if ((this.getCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerCompleted(this, new getCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client addCustomer(Customer cus) {
            object[] results = this.Invoke("addCustomer", new object[] {
                        cus});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomerAsync(Customer cus) {
            this.addCustomerAsync(cus, null);
        }
        
        /// <remarks/>
        public void addCustomerAsync(Customer cus, object userState) {
            if ((this.addCustomerOperationCompleted == null)) {
                this.addCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerOperationCompleted);
            }
            this.InvokeAsync("addCustomer", new object[] {
                        cus}, this.addCustomerOperationCompleted, userState);
        }
        
        private void OnaddCustomerOperationCompleted(object arg) {
            if ((this.addCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerCompleted(this, new addCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client updateCustomer(Customer cus) {
            object[] results = this.Invoke("updateCustomer", new object[] {
                        cus});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerAsync(Customer cus) {
            this.updateCustomerAsync(cus, null);
        }
        
        /// <remarks/>
        public void updateCustomerAsync(Customer cus, object userState) {
            if ((this.updateCustomerOperationCompleted == null)) {
                this.updateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerOperationCompleted);
            }
            this.InvokeAsync("updateCustomer", new object[] {
                        cus}, this.updateCustomerOperationCompleted, userState);
        }
        
        private void OnupdateCustomerOperationCompleted(object arg) {
            if ((this.updateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerCompleted(this, new updateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client deleteCustomer(int ID) {
            object[] results = this.Invoke("deleteCustomer", new object[] {
                        ID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(int ID) {
            this.deleteCustomerAsync(ID, null);
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(int ID, object userState) {
            if ((this.deleteCustomerOperationCompleted == null)) {
                this.deleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("deleteCustomer", new object[] {
                        ID}, this.deleteCustomerOperationCompleted, userState);
        }
        
        private void OndeleteCustomerOperationCompleted(object arg) {
            if ((this.deleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerCompleted(this, new deleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Customer_Account", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client Customer_Account() {
            object[] results = this.Invoke("Customer_Account", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void Customer_AccountAsync() {
            this.Customer_AccountAsync(null);
        }
        
        /// <remarks/>
        public void Customer_AccountAsync(object userState) {
            if ((this.Customer_AccountOperationCompleted == null)) {
                this.Customer_AccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomer_AccountOperationCompleted);
            }
            this.InvokeAsync("Customer_Account", new object[0], this.Customer_AccountOperationCompleted, userState);
        }
        
        private void OnCustomer_AccountOperationCompleted(object arg) {
            if ((this.Customer_AccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Customer_AccountCompleted(this, new Customer_AccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDefaultCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client CreateDefaultCustomer() {
            object[] results = this.Invoke("CreateDefaultCustomer", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDefaultCustomerAsync() {
            this.CreateDefaultCustomerAsync(null);
        }
        
        /// <remarks/>
        public void CreateDefaultCustomerAsync(object userState) {
            if ((this.CreateDefaultCustomerOperationCompleted == null)) {
                this.CreateDefaultCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDefaultCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateDefaultCustomer", new object[0], this.CreateDefaultCustomerOperationCompleted, userState);
        }
        
        private void OnCreateDefaultCustomerOperationCompleted(object arg) {
            if ((this.CreateDefaultCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDefaultCustomerCompleted(this, new CreateDefaultCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addTrans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client addTrans(CustomerAccount ca) {
            object[] results = this.Invoke("addTrans", new object[] {
                        ca});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void addTransAsync(CustomerAccount ca) {
            this.addTransAsync(ca, null);
        }
        
        /// <remarks/>
        public void addTransAsync(CustomerAccount ca, object userState) {
            if ((this.addTransOperationCompleted == null)) {
                this.addTransOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTransOperationCompleted);
            }
            this.InvokeAsync("addTrans", new object[] {
                        ca}, this.addTransOperationCompleted, userState);
        }
        
        private void OnaddTransOperationCompleted(object arg) {
            if ((this.addTransCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTransCompleted(this, new addTransCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerBalanceByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getCustomerBalanceByID(int CustomerID) {
            object[] results = this.Invoke("getCustomerBalanceByID", new object[] {
                        CustomerID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerBalanceByIDAsync(int CustomerID) {
            this.getCustomerBalanceByIDAsync(CustomerID, null);
        }
        
        /// <remarks/>
        public void getCustomerBalanceByIDAsync(int CustomerID, object userState) {
            if ((this.getCustomerBalanceByIDOperationCompleted == null)) {
                this.getCustomerBalanceByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerBalanceByIDOperationCompleted);
            }
            this.InvokeAsync("getCustomerBalanceByID", new object[] {
                        CustomerID}, this.getCustomerBalanceByIDOperationCompleted, userState);
        }
        
        private void OngetCustomerBalanceByIDOperationCompleted(object arg) {
            if ((this.getCustomerBalanceByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerBalanceByIDCompleted(this, new getCustomerBalanceByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerBalanceByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getCustomerBalanceByDates(int CustomerID, System.DateTime dtFr, System.DateTime dtTo) {
            object[] results = this.Invoke("getCustomerBalanceByDates", new object[] {
                        CustomerID,
                        dtFr,
                        dtTo});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerBalanceByDatesAsync(int CustomerID, System.DateTime dtFr, System.DateTime dtTo) {
            this.getCustomerBalanceByDatesAsync(CustomerID, dtFr, dtTo, null);
        }
        
        /// <remarks/>
        public void getCustomerBalanceByDatesAsync(int CustomerID, System.DateTime dtFr, System.DateTime dtTo, object userState) {
            if ((this.getCustomerBalanceByDatesOperationCompleted == null)) {
                this.getCustomerBalanceByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerBalanceByDatesOperationCompleted);
            }
            this.InvokeAsync("getCustomerBalanceByDates", new object[] {
                        CustomerID,
                        dtFr,
                        dtTo}, this.getCustomerBalanceByDatesOperationCompleted, userState);
        }
        
        private void OngetCustomerBalanceByDatesOperationCompleted(object arg) {
            if ((this.getCustomerBalanceByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerBalanceByDatesCompleted(this, new getCustomerBalanceByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTransactionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getTransactionDetails(int CustomerID) {
            object[] results = this.Invoke("getTransactionDetails", new object[] {
                        CustomerID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionDetailsAsync(int CustomerID) {
            this.getTransactionDetailsAsync(CustomerID, null);
        }
        
        /// <remarks/>
        public void getTransactionDetailsAsync(int CustomerID, object userState) {
            if ((this.getTransactionDetailsOperationCompleted == null)) {
                this.getTransactionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionDetailsOperationCompleted);
            }
            this.InvokeAsync("getTransactionDetails", new object[] {
                        CustomerID}, this.getTransactionDetailsOperationCompleted, userState);
        }
        
        private void OngetTransactionDetailsOperationCompleted(object arg) {
            if ((this.getTransactionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionDetailsCompleted(this, new getTransactionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AccountStatement(int CustomerID, System.DateTime dtFr, System.DateTime dtTo) {
            object[] results = this.Invoke("AccountStatement", new object[] {
                        CustomerID,
                        dtFr,
                        dtTo});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AccountStatementAsync(int CustomerID, System.DateTime dtFr, System.DateTime dtTo) {
            this.AccountStatementAsync(CustomerID, dtFr, dtTo, null);
        }
        
        /// <remarks/>
        public void AccountStatementAsync(int CustomerID, System.DateTime dtFr, System.DateTime dtTo, object userState) {
            if ((this.AccountStatementOperationCompleted == null)) {
                this.AccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountStatementOperationCompleted);
            }
            this.InvokeAsync("AccountStatement", new object[] {
                        CustomerID,
                        dtFr,
                        dtTo}, this.AccountStatementOperationCompleted, userState);
        }
        
        private void OnAccountStatementOperationCompleted(object arg) {
            if ((this.AccountStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountStatementCompleted(this, new AccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Server2Client {
        
        private int countField;
        
        private double valueField;
        
        private string messageField;
        
        private System.Data.DataTable dataTableField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dataTable {
            get {
                return this.dataTableField;
            }
            set {
                this.dataTableField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CustomerAccount {
        
        private int customerAccountIDField;
        
        private int customerIDField;
        
        private System.DateTime transDateField;
        
        private string descriptionField;
        
        private double debitField;
        
        private double creditField;
        
        private double balanceField;
        
        /// <remarks/>
        public int CustomerAccountID {
            get {
                return this.customerAccountIDField;
            }
            set {
                this.customerAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransDate {
            get {
                return this.transDateField;
            }
            set {
                this.transDateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Debit {
            get {
                return this.debitField;
            }
            set {
                this.debitField = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public double Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Customer {
        
        private int customerIDField;
        
        private string customerNameField;
        
        private string addressField;
        
        private string phoneField;
        
        private string emailField;
        
        private string balanceField;
        
        /// <remarks/>
        public int CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCustomersCompletedEventHandler(object sender, getCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCustomersFullCompletedEventHandler(object sender, getCustomersFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomersFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomersFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMaxIDCompletedEventHandler(object sender, getMaxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMaxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMaxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCustomerCompletedEventHandler(object sender, getCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addCustomerCompletedEventHandler(object sender, addCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateCustomerCompletedEventHandler(object sender, updateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteCustomerCompletedEventHandler(object sender, deleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Customer_AccountCompletedEventHandler(object sender, Customer_AccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Customer_AccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Customer_AccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateDefaultCustomerCompletedEventHandler(object sender, CreateDefaultCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDefaultCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDefaultCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addTransCompletedEventHandler(object sender, addTransCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTransCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTransCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCustomerBalanceByIDCompletedEventHandler(object sender, getCustomerBalanceByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerBalanceByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerBalanceByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCustomerBalanceByDatesCompletedEventHandler(object sender, getCustomerBalanceByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerBalanceByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerBalanceByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTransactionDetailsCompletedEventHandler(object sender, getTransactionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AccountStatementCompletedEventHandler(object sender, AccountStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591