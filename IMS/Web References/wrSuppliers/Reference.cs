//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IMS.wrSuppliers {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsSuppliersSoap", Namespace="http://tempuri.org/")]
    public partial class wsSuppliers : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getSuppliersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSuppliersFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMaxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback Supplier_AccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTransOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierBalanceByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierOpeningBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupplierBalanceByDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountStatementOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsSuppliers() {
            this.Url = global::IMS.Properties.Settings.Default.IMS_wrSuppliers_wsSuppliers;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getSuppliersCompletedEventHandler getSuppliersCompleted;
        
        /// <remarks/>
        public event getSuppliersFullCompletedEventHandler getSuppliersFullCompleted;
        
        /// <remarks/>
        public event getMaxIDCompletedEventHandler getMaxIDCompleted;
        
        /// <remarks/>
        public event getSupplierCompletedEventHandler getSupplierCompleted;
        
        /// <remarks/>
        public event addSupplierCompletedEventHandler addSupplierCompleted;
        
        /// <remarks/>
        public event updateSupplierCompletedEventHandler updateSupplierCompleted;
        
        /// <remarks/>
        public event deleteSupplierCompletedEventHandler deleteSupplierCompleted;
        
        /// <remarks/>
        public event Supplier_AccountCompletedEventHandler Supplier_AccountCompleted;
        
        /// <remarks/>
        public event addTransCompletedEventHandler addTransCompleted;
        
        /// <remarks/>
        public event getSupplierBalanceByIDCompletedEventHandler getSupplierBalanceByIDCompleted;
        
        /// <remarks/>
        public event getSupplierOpeningBalanceCompletedEventHandler getSupplierOpeningBalanceCompleted;
        
        /// <remarks/>
        public event getSupplierBalanceByDatesCompletedEventHandler getSupplierBalanceByDatesCompleted;
        
        /// <remarks/>
        public event getTransactionDetailsCompletedEventHandler getTransactionDetailsCompleted;
        
        /// <remarks/>
        public event AccountStatementCompletedEventHandler AccountStatementCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSuppliers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getSuppliers() {
            object[] results = this.Invoke("getSuppliers", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getSuppliersAsync() {
            this.getSuppliersAsync(null);
        }
        
        /// <remarks/>
        public void getSuppliersAsync(object userState) {
            if ((this.getSuppliersOperationCompleted == null)) {
                this.getSuppliersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSuppliersOperationCompleted);
            }
            this.InvokeAsync("getSuppliers", new object[0], this.getSuppliersOperationCompleted, userState);
        }
        
        private void OngetSuppliersOperationCompleted(object arg) {
            if ((this.getSuppliersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSuppliersCompleted(this, new getSuppliersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSuppliersFull", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getSuppliersFull() {
            object[] results = this.Invoke("getSuppliersFull", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getSuppliersFullAsync() {
            this.getSuppliersFullAsync(null);
        }
        
        /// <remarks/>
        public void getSuppliersFullAsync(object userState) {
            if ((this.getSuppliersFullOperationCompleted == null)) {
                this.getSuppliersFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSuppliersFullOperationCompleted);
            }
            this.InvokeAsync("getSuppliersFull", new object[0], this.getSuppliersFullOperationCompleted, userState);
        }
        
        private void OngetSuppliersFullOperationCompleted(object arg) {
            if ((this.getSuppliersFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSuppliersFullCompleted(this, new getSuppliersFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMaxID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getMaxID() {
            object[] results = this.Invoke("getMaxID", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getMaxIDAsync() {
            this.getMaxIDAsync(null);
        }
        
        /// <remarks/>
        public void getMaxIDAsync(object userState) {
            if ((this.getMaxIDOperationCompleted == null)) {
                this.getMaxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMaxIDOperationCompleted);
            }
            this.InvokeAsync("getMaxID", new object[0], this.getMaxIDOperationCompleted, userState);
        }
        
        private void OngetMaxIDOperationCompleted(object arg) {
            if ((this.getMaxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMaxIDCompleted(this, new getMaxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Supplier getSupplier(int ID) {
            object[] results = this.Invoke("getSupplier", new object[] {
                        ID});
            return ((Supplier)(results[0]));
        }
        
        /// <remarks/>
        public void getSupplierAsync(int ID) {
            this.getSupplierAsync(ID, null);
        }
        
        /// <remarks/>
        public void getSupplierAsync(int ID, object userState) {
            if ((this.getSupplierOperationCompleted == null)) {
                this.getSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierOperationCompleted);
            }
            this.InvokeAsync("getSupplier", new object[] {
                        ID}, this.getSupplierOperationCompleted, userState);
        }
        
        private void OngetSupplierOperationCompleted(object arg) {
            if ((this.getSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierCompleted(this, new getSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client addSupplier(Supplier sup) {
            object[] results = this.Invoke("addSupplier", new object[] {
                        sup});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void addSupplierAsync(Supplier sup) {
            this.addSupplierAsync(sup, null);
        }
        
        /// <remarks/>
        public void addSupplierAsync(Supplier sup, object userState) {
            if ((this.addSupplierOperationCompleted == null)) {
                this.addSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSupplierOperationCompleted);
            }
            this.InvokeAsync("addSupplier", new object[] {
                        sup}, this.addSupplierOperationCompleted, userState);
        }
        
        private void OnaddSupplierOperationCompleted(object arg) {
            if ((this.addSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSupplierCompleted(this, new addSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client updateSupplier(Supplier sup) {
            object[] results = this.Invoke("updateSupplier", new object[] {
                        sup});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void updateSupplierAsync(Supplier sup) {
            this.updateSupplierAsync(sup, null);
        }
        
        /// <remarks/>
        public void updateSupplierAsync(Supplier sup, object userState) {
            if ((this.updateSupplierOperationCompleted == null)) {
                this.updateSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSupplierOperationCompleted);
            }
            this.InvokeAsync("updateSupplier", new object[] {
                        sup}, this.updateSupplierOperationCompleted, userState);
        }
        
        private void OnupdateSupplierOperationCompleted(object arg) {
            if ((this.updateSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSupplierCompleted(this, new updateSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client deleteSupplier(int ID) {
            object[] results = this.Invoke("deleteSupplier", new object[] {
                        ID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSupplierAsync(int ID) {
            this.deleteSupplierAsync(ID, null);
        }
        
        /// <remarks/>
        public void deleteSupplierAsync(int ID, object userState) {
            if ((this.deleteSupplierOperationCompleted == null)) {
                this.deleteSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSupplierOperationCompleted);
            }
            this.InvokeAsync("deleteSupplier", new object[] {
                        ID}, this.deleteSupplierOperationCompleted, userState);
        }
        
        private void OndeleteSupplierOperationCompleted(object arg) {
            if ((this.deleteSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSupplierCompleted(this, new deleteSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Supplier_Account", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client Supplier_Account() {
            object[] results = this.Invoke("Supplier_Account", new object[0]);
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void Supplier_AccountAsync() {
            this.Supplier_AccountAsync(null);
        }
        
        /// <remarks/>
        public void Supplier_AccountAsync(object userState) {
            if ((this.Supplier_AccountOperationCompleted == null)) {
                this.Supplier_AccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSupplier_AccountOperationCompleted);
            }
            this.InvokeAsync("Supplier_Account", new object[0], this.Supplier_AccountOperationCompleted, userState);
        }
        
        private void OnSupplier_AccountOperationCompleted(object arg) {
            if ((this.Supplier_AccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Supplier_AccountCompleted(this, new Supplier_AccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addTrans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client addTrans(SupplierAccount ca) {
            object[] results = this.Invoke("addTrans", new object[] {
                        ca});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void addTransAsync(SupplierAccount ca) {
            this.addTransAsync(ca, null);
        }
        
        /// <remarks/>
        public void addTransAsync(SupplierAccount ca, object userState) {
            if ((this.addTransOperationCompleted == null)) {
                this.addTransOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTransOperationCompleted);
            }
            this.InvokeAsync("addTrans", new object[] {
                        ca}, this.addTransOperationCompleted, userState);
        }
        
        private void OnaddTransOperationCompleted(object arg) {
            if ((this.addTransCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTransCompleted(this, new addTransCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSupplierBalanceByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getSupplierBalanceByID(int SupplierID) {
            object[] results = this.Invoke("getSupplierBalanceByID", new object[] {
                        SupplierID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getSupplierBalanceByIDAsync(int SupplierID) {
            this.getSupplierBalanceByIDAsync(SupplierID, null);
        }
        
        /// <remarks/>
        public void getSupplierBalanceByIDAsync(int SupplierID, object userState) {
            if ((this.getSupplierBalanceByIDOperationCompleted == null)) {
                this.getSupplierBalanceByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierBalanceByIDOperationCompleted);
            }
            this.InvokeAsync("getSupplierBalanceByID", new object[] {
                        SupplierID}, this.getSupplierBalanceByIDOperationCompleted, userState);
        }
        
        private void OngetSupplierBalanceByIDOperationCompleted(object arg) {
            if ((this.getSupplierBalanceByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierBalanceByIDCompleted(this, new getSupplierBalanceByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSupplierOpeningBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getSupplierOpeningBalance(int SupplierID) {
            object[] results = this.Invoke("getSupplierOpeningBalance", new object[] {
                        SupplierID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getSupplierOpeningBalanceAsync(int SupplierID) {
            this.getSupplierOpeningBalanceAsync(SupplierID, null);
        }
        
        /// <remarks/>
        public void getSupplierOpeningBalanceAsync(int SupplierID, object userState) {
            if ((this.getSupplierOpeningBalanceOperationCompleted == null)) {
                this.getSupplierOpeningBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierOpeningBalanceOperationCompleted);
            }
            this.InvokeAsync("getSupplierOpeningBalance", new object[] {
                        SupplierID}, this.getSupplierOpeningBalanceOperationCompleted, userState);
        }
        
        private void OngetSupplierOpeningBalanceOperationCompleted(object arg) {
            if ((this.getSupplierOpeningBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierOpeningBalanceCompleted(this, new getSupplierOpeningBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSupplierBalanceByDates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getSupplierBalanceByDates(int SupplierID, System.DateTime dtFr, System.DateTime dtTo) {
            object[] results = this.Invoke("getSupplierBalanceByDates", new object[] {
                        SupplierID,
                        dtFr,
                        dtTo});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getSupplierBalanceByDatesAsync(int SupplierID, System.DateTime dtFr, System.DateTime dtTo) {
            this.getSupplierBalanceByDatesAsync(SupplierID, dtFr, dtTo, null);
        }
        
        /// <remarks/>
        public void getSupplierBalanceByDatesAsync(int SupplierID, System.DateTime dtFr, System.DateTime dtTo, object userState) {
            if ((this.getSupplierBalanceByDatesOperationCompleted == null)) {
                this.getSupplierBalanceByDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupplierBalanceByDatesOperationCompleted);
            }
            this.InvokeAsync("getSupplierBalanceByDates", new object[] {
                        SupplierID,
                        dtFr,
                        dtTo}, this.getSupplierBalanceByDatesOperationCompleted, userState);
        }
        
        private void OngetSupplierBalanceByDatesOperationCompleted(object arg) {
            if ((this.getSupplierBalanceByDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupplierBalanceByDatesCompleted(this, new getSupplierBalanceByDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTransactionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client getTransactionDetails(int SupplierID) {
            object[] results = this.Invoke("getTransactionDetails", new object[] {
                        SupplierID});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionDetailsAsync(int SupplierID) {
            this.getTransactionDetailsAsync(SupplierID, null);
        }
        
        /// <remarks/>
        public void getTransactionDetailsAsync(int SupplierID, object userState) {
            if ((this.getTransactionDetailsOperationCompleted == null)) {
                this.getTransactionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionDetailsOperationCompleted);
            }
            this.InvokeAsync("getTransactionDetails", new object[] {
                        SupplierID}, this.getTransactionDetailsOperationCompleted, userState);
        }
        
        private void OngetTransactionDetailsOperationCompleted(object arg) {
            if ((this.getTransactionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionDetailsCompleted(this, new getTransactionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Server2Client AccountStatement(int SupplierID, System.DateTime dtFr, System.DateTime dtTo) {
            object[] results = this.Invoke("AccountStatement", new object[] {
                        SupplierID,
                        dtFr,
                        dtTo});
            return ((Server2Client)(results[0]));
        }
        
        /// <remarks/>
        public void AccountStatementAsync(int SupplierID, System.DateTime dtFr, System.DateTime dtTo) {
            this.AccountStatementAsync(SupplierID, dtFr, dtTo, null);
        }
        
        /// <remarks/>
        public void AccountStatementAsync(int SupplierID, System.DateTime dtFr, System.DateTime dtTo, object userState) {
            if ((this.AccountStatementOperationCompleted == null)) {
                this.AccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountStatementOperationCompleted);
            }
            this.InvokeAsync("AccountStatement", new object[] {
                        SupplierID,
                        dtFr,
                        dtTo}, this.AccountStatementOperationCompleted, userState);
        }
        
        private void OnAccountStatementOperationCompleted(object arg) {
            if ((this.AccountStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountStatementCompleted(this, new AccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Server2Client {
        
        private int countField;
        
        private double valueField;
        
        private string messageField;
        
        private System.Data.DataTable dataTableField;
        
        private System.Data.DataSet dataSetField;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dataTable {
            get {
                return this.dataTableField;
            }
            set {
                this.dataTableField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dataSet {
            get {
                return this.dataSetField;
            }
            set {
                this.dataSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SupplierAccount {
        
        private int supplierAccountIDField;
        
        private int supplierIDField;
        
        private System.DateTime transDateField;
        
        private string descriptionField;
        
        private double debitField;
        
        private double creditField;
        
        private double balanceField;
        
        /// <remarks/>
        public int SupplierAccountID {
            get {
                return this.supplierAccountIDField;
            }
            set {
                this.supplierAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public int SupplierID {
            get {
                return this.supplierIDField;
            }
            set {
                this.supplierIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransDate {
            get {
                return this.transDateField;
            }
            set {
                this.transDateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Debit {
            get {
                return this.debitField;
            }
            set {
                this.debitField = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public double Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Supplier {
        
        private int supplierIDField;
        
        private string supplierNameField;
        
        private string addressField;
        
        private string phoneField;
        
        private string emailField;
        
        private double balanceField;
        
        /// <remarks/>
        public int SupplierID {
            get {
                return this.supplierIDField;
            }
            set {
                this.supplierIDField = value;
            }
        }
        
        /// <remarks/>
        public string SupplierName {
            get {
                return this.supplierNameField;
            }
            set {
                this.supplierNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public double Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSuppliersCompletedEventHandler(object sender, getSuppliersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSuppliersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSuppliersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSuppliersFullCompletedEventHandler(object sender, getSuppliersFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSuppliersFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSuppliersFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getMaxIDCompletedEventHandler(object sender, getMaxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMaxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMaxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSupplierCompletedEventHandler(object sender, getSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Supplier Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Supplier)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addSupplierCompletedEventHandler(object sender, addSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateSupplierCompletedEventHandler(object sender, updateSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void deleteSupplierCompletedEventHandler(object sender, deleteSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void Supplier_AccountCompletedEventHandler(object sender, Supplier_AccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Supplier_AccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Supplier_AccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void addTransCompletedEventHandler(object sender, addTransCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTransCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTransCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSupplierBalanceByIDCompletedEventHandler(object sender, getSupplierBalanceByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupplierBalanceByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupplierBalanceByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSupplierOpeningBalanceCompletedEventHandler(object sender, getSupplierOpeningBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupplierOpeningBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupplierOpeningBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getSupplierBalanceByDatesCompletedEventHandler(object sender, getSupplierBalanceByDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupplierBalanceByDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupplierBalanceByDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getTransactionDetailsCompletedEventHandler(object sender, getTransactionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AccountStatementCompletedEventHandler(object sender, AccountStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Server2Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Server2Client)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591